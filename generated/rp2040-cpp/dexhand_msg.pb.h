/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_DEXHAND_DEXHAND_MSG_PB_H_INCLUDED
#define PB_DEXHAND_DEXHAND_MSG_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _dexhand_ServoStatus {
    bool has_servoId;
    uint32_t servoId;
    bool has_status;
    uint32_t status;
    bool has_voltage;
    uint32_t voltage;
    bool has_temperature;
    uint32_t temperature;
    bool has_position;
    uint32_t position;
    bool has_speed;
    int32_t speed;
    bool has_load;
    int32_t load;
} dexhand_ServoStatus;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define dexhand_ServoStatus_init_default         {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define dexhand_ServoStatus_init_zero            {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define dexhand_ServoStatus_servoId_tag          1
#define dexhand_ServoStatus_status_tag           2
#define dexhand_ServoStatus_voltage_tag          3
#define dexhand_ServoStatus_temperature_tag      4
#define dexhand_ServoStatus_position_tag         5
#define dexhand_ServoStatus_speed_tag            6
#define dexhand_ServoStatus_load_tag             7

/* Struct field encoding specification for nanopb */
#define dexhand_ServoStatus_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UINT32,   servoId,           1) \
X(a, STATIC,   OPTIONAL, UINT32,   status,            2) \
X(a, STATIC,   OPTIONAL, UINT32,   voltage,           3) \
X(a, STATIC,   OPTIONAL, UINT32,   temperature,       4) \
X(a, STATIC,   OPTIONAL, UINT32,   position,          5) \
X(a, STATIC,   OPTIONAL, SINT32,   speed,             6) \
X(a, STATIC,   OPTIONAL, SINT32,   load,              7)
#define dexhand_ServoStatus_CALLBACK NULL
#define dexhand_ServoStatus_DEFAULT NULL

extern const pb_msgdesc_t dexhand_ServoStatus_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define dexhand_ServoStatus_fields &dexhand_ServoStatus_msg

/* Maximum encoded size of messages (where known) */
#define DEXHAND_DEXHAND_MSG_PB_H_MAX_SIZE        dexhand_ServoStatus_size
#define dexhand_ServoStatus_size                 42

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
